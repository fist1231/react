npm outdated
npm update

webpack 3 to 4 migration:
=========================
cross-fetch                1.1.1   1.1.1   2.1.0  rapp2
exports-loader             0.6.4   0.6.4   0.7.0  rapp2
html-webpack-plugin       2.30.1  2.30.1   3.2.0  rapp2
imports-loader             0.7.1   0.7.1   0.8.0  rapp2
interpolate-html-plugin    2.0.0   2.0.0   3.0.0  rapp2
react-scripts             1.0.17  1.0.17   1.1.4  rapp2
redux                      3.7.2   3.7.2   4.0.0  rapp2
redux-observable          0.17.0  0.17.0  0.18.0  rapp2
rollup-plugin-commonjs     8.4.1   8.4.1   9.1.0  rapp2
rollup-plugin-uglify       2.0.1   2.0.1   3.0.0  rapp2
sass-loader                6.0.7   6.0.7   7.0.1  rapp2

npm uninstall --save-dev cross-fetch exports-loader html-webpack-plugin imports-loader interpolate-html-plugin react-scripts redux redux-observable rollup-plugin-commonjs rollup-plugin-uglify sass-loader
npm install --save-dev cross-fetch exports-loader html-webpack-plugin imports-loader interpolate-html-plugin react-scripts redux redux-observable rollup-plugin-commonjs rollup-plugin-uglify sass-loader

npm uninstall --save-dev babel-preset-es2015 babel-preset-react babel-preset-stage-2
npm i -D extract-text-webpack-plugin@next


1.
npm i webpack webpack-cli --save-dev


--------------------- Nginx ----------------------
https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04

sudo apt update
sudo apt install nginx

sudo ufw app list
Out:
Available applications:
  Nginx Full
  Nginx HTTP
  Nginx HTTPS
  OpenSSH

sudo ufw allow 'Nginx HTTP'
sudo ufw status

systemctl status nginx
ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
Out: 
//give you your public IP address: ec2_1: /*172.31.28.227*/
Instead 

sudo nano /etc/nginx/sites-available/demo
/*
        server {
                        listen       5555;
                        server_name  localhost;
                        root /home/stislin/rapp2;

                        #charset koi8-r;

                        #access_log  logs/host.access.log  main;

                        location / {
                                alias /home/stislin/rapp2/;
                                try_files $uri /index.html;
                                #root   html;
                                index  index.html;
                        }

                        #error_page  404              /404.html;

                        # redirect server error pages to the static page /50x.html
                        #
                        error_page   500 502 503 504  /50x.html;
                        location = /50x.html {
                                root   html;
                        }

        }
*/

/*
    server {
        listen 5555 ssl;
        listen [::]:5555 ssl;

        server_name localhost;
        root /home/stislin/rapp2;

        # This fixes react router reload non root url 404 error on ssl nginx
        location / {
               try_files $uri $uri/ /index.html?$query_string;
        }

        # was supposed to fix http->https redirect error, but not working
        # 400 Bad Request. The plain HTTP request was sent to HTTPS port. nginx/1.14.2
        # ssl off;
        ssl_certificate /home/stislin/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /home/stislin/nginx/certs/nginx-selfsigned.key;
        ssl_dhparam /home/stislin/nginx/certs/dhparam.pem;

    }

*/

sudo /opt/nginx/sbin/nginx -s reload

sudo ln -s /etc/nginx/sites-available/demo /etc/nginx/sites-enabled/
sudo nano /etc/nginx/nginx.conf
Uncomment:
server_names_hash_bucket_size 64;

sudo nginx -t

sudo systemctl restart nginx

Open aws port:
1. network & security -> security groups -> create security groups:
http; tcp; 5555; demo_name
2. Instances, select instance, actions-> Networking -> Chnage security groups - add demo groups








